akka {
  loglevel = "WARNING"
  loglevel = ${?LOG_LEVEL}
  stdout-loglevel = "WARNING"
  stdout-loglevel = ${?LOG_LEVEL}
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-config-on-start = off
  log-config-on-start = ${?LOG_CONFIG}

  log-dead-letters = 10
  log-dead-letters-during-shutdown = off

  actor {
    provider = "cluster"

    allow-java-serialization = off
    enable-additional-serialization-bindings = true

  }

  remote {
    log-sent-messages = on
    log-received-messages = on
    log-remote-lifecycle-events = on

    maximum-payload-bytes = 10000000 bytes

    watch-failure-detector {
      acceptable-heartbeat-pause = 20 s
    }

    artery {
      enabled = on
      transport = tcp

      canonical.hostname = ${clustering.ip} # external (logical) hostname
      canonical.port = ${clustering.port}   # external (logical) port

      bind.hostname = 0.0.0.0         # internal (bind) hostname
      bind.port = ${clustering.port}  # internal (bind) port

    }

  }

  cluster {
    seed-nodes = [
      "akka://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]

    roles = ["portal"]

  }

  extensions += "akka.cluster.pubsub.DistributedPubSub"

}

clustering {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 4089
  port = ${?CLUSTER_PORT}
  seed-ip = "woken"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?WOKEN_PORT_8088_TCP_ADDR}
  seed-port = 8088
  seed-port = ${?WOKEN_PORT_8088_TCP_PORT}
  cluster.name = "woken"
  cluster.name = ${?CLUSTER_NAME}
}
