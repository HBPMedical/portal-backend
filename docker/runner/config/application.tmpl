# Configuration template for the portal running inside a Docker container

# See http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
spring:
  datasource:
    url: {{ default .Env.DB_URL "jdbc:postgresql://172.22.0.1:5433/postgres" }}
    username: {{ default .Env.DB_USER "postgres" }}
    password: {{ .Env.DB_PASSWORD }}
    driver-class-name: org.postgresql.Driver
  metaDatasource:
    url: {{ default .Env.META_DB_URL "jdbc:postgresql://172.22.0.1:5432/postgres" }}
    username: {{ default .Env.META_DB_USER "postgres" }}
    password: {{ .Env.META_DB_PASSWORD }}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      dialect: org.hibernate.dialect.PostgreSQL9Dialect
  # SPRING RESOURCES HANDLING
  resources:
    chain:
      enabled: true # TODO: why is that enabled? Do we serve any resources from the backend?

# HBP OAUTH2 LOGIN
hbp:
  authentication:
    enabled: {{ default .Env.AUTHENTICATION "1" }}
  client:
    clientId: {{ default .Env.CLIENT_ID "996f97c5-a3ca-460e-b18b-00df3e2be89a" }}
    clientSecret: {{ .Env.CLIENT_SECRET }}
    accessTokenUri: {{ default .Env.TOKEN_URI "https://services.humanbrainproject.eu/oidc/token" }}
    userAuthorizationUri: {{ default .Env.AUTH_URI "https://services.humanbrainproject.eu/oidc/authorize" }}
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
  resource:
    userInfoUri: {{ default .Env.USER_INFO_URI "https://services.humanbrainproject.eu/oidc/userinfo" }}

# WEB FRONTEND
frontend:
  loginUrl: {{ default .Env.LOGIN_URL "http://frontend/services/login/hbp" }}
  redirectAfterLogoutUrl: {{ default .Env.AFTER_LOGOUT_URL (default .Env.LOGIN_URI "http://frontend/services/login/hbp") }}
  redirectAfterLoginUrl: {{ default .Env.AFTER_LOGIN_URL "http://frontend/home" }}

logging:
  level:
    logging.level.org.springframework.web = {{ default .Env.LOGGING_LEVEL_WEB "WARN" }}
    logging.level.org.hibernate = {{ default .Env.LOGGING_LEVEL_HIBERNATE "WARN" }}

# EMBEDDED SERVER CONFIGURATION
server:
  contextPath: {{ default .Env.CONTEXT_PATH "/services" }}
  port: 8080
  use-forward-headers: true
  session:
    timeout: {{ default .Env.SESSION_TIMEOUT "2592000" }}

# ENDPOINTS
endpoints:
  enabled: true
  health:
    enabled: true
    endoint: /health
    sentitive: false

services:
  woken:
    experimentUrl: {{ default .Env.WOKEN_URL "http://172.22.0.1:8087" }}/experiment
    listMethodsUrl: {{ default .Env.WOKEN_URL "http://172.22.0.1:8087" }}/list-methods
  exareme:
    miningExaremeUrl: {{ default .Env.EXAREME_URL "http://hbps2.chuv.ch:9090" }}/mining/query
