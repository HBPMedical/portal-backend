# Configuration template for the portal running inside a Docker container

### LOG LEVELS ###
logging:
  level:
    root: {{ default .Env.LOG_LEVEL_FRAMEWORK "ERROR" }}
    org: {{ default .Env.LOG_LEVEL_FRAMEWORK "ERROR" }}
    eu:
      hbp: {{ default .Env.LOG_LEVEL "INFO" }}


### AUTHENTICATION ###
authentication:
  enabled: {{ default .Env.AUTHENTICATION "true" }}


### DATABASE CONFIGURATION ###
spring:
  portal-datasource:
    url: {{ default .Env.PORTAL_DB_URL "jdbc:postgresql://88.197.53.106:5432/portal" }}
    schema: {{ default .Env.PORTAL_DB_SCHEMA "public" }}
    username: {{ default .Env.PORTAL_DB_USER "postgres" }}
    password: {{ .Env.PORTAL_DB_PASSWORD }}
    driver-class-name: org.postgresql.Driver
  data:
    jpa:
      repositories:
        bootstrap-mode: default
  jpa:
    hibernate:
      dialect: org.hibernate.dialect.PostgreSQL9Dialect
      ddl-auto: validate


### EXTERNAL SERVICES ###
services:
  mipengine:
    algorithmsUrl: {{ .Env.MIPENGINE_URL}}/algorithms

  exareme:
    queryExaremeUrl: {{ default .Env.EXAREME_URL "http://localhost:9090" }}/mining/query
    algorithmsUrl: {{ default .Env.EXAREME_URL "http://localhost:9090" }}/mining/algorithms.json

  galaxy:
    galaxyUrl:      {{ default .Env.GALAXY_URL "http://localhost:8090/" }}
    galaxyContext:  "nativeGalaxy/workflows/list"
    galaxyApiKey:   {{ .Env.GALAXY_API_KEY }}
    galaxyUsername:  {{ default .Env.GALAXY_USERNAME "admin" }}
    galaxyPassword:  {{ default .Env.GALAXY_PASSWORD "password" }}


### KEYCLOAK ###
keycloak:
  enabled: true
  auth-server-url: {{ .Env.KEYCLOAK_AUTH_URL }}
  realm: {{ .Env.KEYCLOAK_REALM }}
  resource: {{ .Env.KEYCLOAK_CLIENT_ID }}
  enable-basic-auth: true
  credentials:
    secret: {{ .Env.KEYCLOAK_CLIENT_SECRET }}
  principal-attribute: "preferred_username"
  ssl-required: {{ .Env.KEYCLOAK_SSL_REQUIRED }}

### EXTERNAL FILES ###
# Files are imported when building the docker image
files:
  pathologies_json: "file:/opt/portal/api/pathologies.json"
  disabledAlgorithms_json: "file:/opt/portal/api/disabledAlgorithms.json"


### EMBEDDED SERVER CONFIGURATION ###
server:
  servlet:
    contextPath: "/services"
  port: 8080
  forward-headers-strategy: native


### ENDPOINTS ###
endpoints:
  enabled: true
  health:
    enabled: true
    endpoint: /health
    sensitive: false