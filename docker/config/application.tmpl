# Configuration template for the portal running inside a Docker container

# See http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
spring:
  portalDatasource:
    url: {{ default .Env.PORTAL_DB_URL "jdbc:postgresql://172.22.0.1:5432/portal" }}
    schema: {{ default .Env.PORTAL_DB_SCHEMA "public" }}
    username: {{ default .Env.PORTAL_DB_USER "postgres" }}
    password: {{ .Env.PORTAL_DB_PASSWORD }}
    driver-class-name: org.postgresql.Driver
  metaDatasource:
    url: {{ default .Env.META_DB_URL "jdbc:postgresql://172.22.0.1:5432/meta" }}
    schema: {{ default .Env.META_DB_SCHEMA "public" }}
    username: {{ default .Env.META_DB_USER "postgres" }}
    password: {{ .Env.META_DB_PASSWORD }}
    driver-class-name: org.postgresql.Driver
  featuresDatasource:
      url: {{ default .Env.FEATURES_DB_URL "jdbc:postgresql://172.22.0.1:5433/features" }}
      schema: {{ default .Env.FEATURES_DB_SCHEMA "public" }}
      main-table: {{ default .Env.FEATURES_DB_MAIN_TABLE "features" }}
      username: {{ default .Env.FEATURES_DB_USER "postgres" }}
      password: {{ .Env.FEATURES_DB_PASSWORD }}
      driver-class-name: org.postgresql.Driver
      datasets: {{ .Env.DATASETS }}
  jpa:
    hibernate:
      dialect: org.hibernate.dialect.PostgreSQL9Dialect
  # SPRING RESOURCES HANDLING
  resources:
    chain:
      enabled: true # TODO: why is that enabled? Do we serve any resources from the backend?

# HBP OAUTH2 LOGIN
hbp:
  authentication:
    enabled: {{ default .Env.AUTHENTICATION "1" }}
  client:
    clientId: {{ default .Env.CLIENT_ID "996f97c5-a3ca-460e-b18b-00df3e2be89a" }}
    clientSecret: {{ .Env.CLIENT_SECRET }}
    accessTokenUri: {{ default .Env.TOKEN_URI "https://services.humanbrainproject.eu/oidc/token" }}
    userAuthorizationUri: {{ default .Env.AUTH_URI "https://services.humanbrainproject.eu/oidc/authorize" }}
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
    useCurrentUri: false
    preEstablishedRedirectUri: {{ default .Env.FRONTEND_LOGIN_URL "http://frontend/services/login/hbp" }}
  resource:
    userInfoUri: {{ default .Env.USER_INFO_URI "https://services.humanbrainproject.eu/oidc/userinfo" }}
    revokeTokenUri: {{ default .Env.REVOKE_TOKEN_URI "https://services.humanbrainproject.eu/oidc/slo" }}
  sso:
    login-path:

# WEB FRONTEND
frontend:
  loginUrl: {{ default .Env.FRONTEND_LOGIN_URL "http://frontend/services/login/hbp" }}
  redirectAfterLogoutUrl: {{ default .Env.FRONTEND_AFTER_LOGOUT_URL (default .Env.LOGIN_URI "http://frontend/services/login/hbp") }}
  redirectAfterLoginUrl: {{ default .Env.FRONTEND_AFTER_LOGIN_URL "http://frontend/home" }}

logging:
  level:
    root: INFO
    org:
      springframework:
        web: {{ default .Env.LOGGING_LEVEL_WEB "WARN" }}
      hibernate: {{ default .Env.LOGGING_LEVEL_HIBERNATE "WARN" }}
    eu:
      hbp: {{ default .Env.LOGGING_LEVEL_MIP "INFO" }}

# EMBEDDED SERVER CONFIGURATION
server:
  contextPath: {{ default .Env.CONTEXT_PATH "/services" }}
  port: 8080
  use-forward-headers: true
  session:
    timeout: {{ default .Env.SESSION_TIMEOUT "2592000" }}

# ENDPOINTS
endpoints:
  enabled: true
  health:
    enabled: true
    endoint: /health
    sentitive: false

services:
  exareme:
    miningExaremeUrl: {{ default .Env.EXAREME_URL "http://localhost:9090" }}/mining/query

akka:
  woken:
    host: {{ default .Env.WOKEN_PORT_8088_TCP_ADDR "woken" }}
    port: {{ default .Env.WOKEN_PORT_8088_TCP_PORT "8088" }}
    path: {{ default .Env.WOKEN_AKKA_PATH "/user/entrypoint" }}
